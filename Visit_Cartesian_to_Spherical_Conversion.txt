** 
Author: Sam Frederick
Date: 11-20-18
Text file for compiling list of expressions specified in the "Expressions" Control menu in VisIt 
necessary for converting B-field coordinates from spherical to cartesian to properly display vector data. 

----------------------------------------------------------------------------------------------------------

**Background**

As data is imported into VisIT, the mesh constituting the 3-D computational domain is assigned 
cartesian coordinates. One can verify that this is the case by assigning the variables X,Y,Z 
(which I define here) as the columns of the 'mesh' array. These variables can be plotted in a 
3-D pseudocolor plot showing the computational domain where each grid-cell is assigned the value
the specified variable. For instance, if X is chosen, the user will see a horizontal gradient when
looking face on at the X-Z plane corresponding to X-values ranging from -2 to 2. This process can 
be repeated for Y and Z. 

The B-field as generated by init.c within the PLUTO Code is assigned values in spherical coordinates. 
This means that we must convert our B-field components from spherical to cartesian in order to
properly visualize the B-field in VisIt. 

In order to create these transformations I referenced the following sources:

	[visit-users] forum post: 
	https://elist.ornl.gov/pipermail/visit-users/2015-September/017842.html
	(The user wants polar coordinates, however, the method is very much the same)
	
	Transformation matrix for converting from spherical to cartesian: 
	https://www.mathworks.com/help/phased/ref/sph2cartvec.html
	This provides the equations for creating Vx, Vy, and Vz. 
	
----------------------------------------------------------------------------------------------------------
**Expressions**

Coords: 
coord(mesh) // defines coordinate mesh as a Vector Mesh Variable

X:
Coords[0] // defines X-direction as Scalar Mesh Variable

Y:
Coords[1] // defines Y-direction as Scalar Mesh Variable

Z:
Coords[2] // defines Z-direction as Scalar Mesh Variable

R:
sqrt(X*X+Y*Y+Z*Z) // defines R, radius, as a Scalar Mesh Variable

theta:
acos(Z/(R+.001)) // defines theta as a Scalar Mesh Variable

phi:
acos(X/(R*sin(theta))) // defines phi as a Scalar Mesh Variable 

Vx:
-Mp*sin(phi)-Mt*sin(theta)*cos(phi)+Mr*cos(theta)*cos(phi) // Magnitude of B-field in x-direction

Vy:
Mp*cos(phi)-Mt*sin(theta)*sin(phi)+Mr*cos(theta)*sin(phi) //  Magnitude of B-field in y-direction

Vz:
Mt*cos(theta)+Mr*sin(theta) // Magnitude of B-field in z-direction

Magnetic_Field:
{Vx,Vy,Vz}  // The magnetic field itself in vector form
